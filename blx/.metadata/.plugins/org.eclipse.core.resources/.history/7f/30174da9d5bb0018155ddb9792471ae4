package com.blx.service.impl;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.blx.mapper.StaffMapper;
import com.blx.pojo.Staff;
import com.blx.pojo.StaffExample;
import com.blx.pojo.StaffExample.Criteria;
import com.blx.service.StaffService;

@Service
public class StaffServiceImpl implements StaffService {

	@Autowired
	private StaffMapper staffMapper;
	
	@Override
	public Staff login(String loginPhone, String loginCode,String loginPassword) {
		StaffExample example = new StaffExample();
		Criteria criteria = example.createCriteria();
		if (!loginPhone.isEmpty()) {
			criteria.andStaffCompanyPositionCodeEqualTo(loginCode);
		}else{
			criteria.andStaffPhoneEqualTo(loginPhone);
		}
		List<Staff> staffList = staffMapper.selectByExample(example);
		if (staffList!=null&&staffList.size()>0) {
			return staffList.get(0);
		}
		return null;
	}
	@Override
	public List<Staff> SelectStaffInfoByCondition(StaffExample example) {
		List<Staff> staffList = staffMapper.selectByExample(example);
		return staffList;
	}
	@Override
	public boolean InserStaffInfoByStaff(Staff staff) {
		int isok = staffMapper.insertSelective(staff);
		if (isok > 0) {
			return true;
		}
		return false;
	}
	@Override
	public boolean DeleteStaffInfoByStaffId(Integer staffId) {
		int isok = staffMapper.deleteByPrimaryKey(staffId);
		if (isok > 0) {
			return true;
		}
		return false;
	}
	@Override
	public boolean UpdateStaffInfoByStaff(Staff staff) {
		int isok = staffMapper.updateByPrimaryKeySelective(staff);
		if (isok > 0) {
			return true;
		}
		return false;
	}

}
